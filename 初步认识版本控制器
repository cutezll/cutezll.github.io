初识版本控制器
CVS：CVS的英文全称是Concurrent Version System(并行版本系统)。它主要用于记录源文件的历史。CVS是使用“客户端/服务器”(Client/Server)模式来工作的。
CVS是源于unix的版本控制工具，对于CVS的安装和使用最好对unix的系统有所了解能更容易学习，CVS的服务器管理需要进行各种命令行操作。目前，CVS的客户端有winCVS的图形化界面，服务器端也有CVSNT的版本，易用性正在提高。
它的客户机/服务器存取方法使得开发者可以从任何因特网的接入点存取最新的代码；它的无限制的版本管理检出的模式避免了通常的 因为排它检出模式而引起的人工冲突；它的客户端工具可以在绝大多数的平台上使用。同样，CVS也不提供对变更流程的自动管理功能。
一般来说，CVS的权限设置单一，通常只能通过CVSROOT/passwd, CVSROOT/readers, CVSROOT/writers文 件，同时还要设置CVS REPOS的物理目录权限来完成权限设置，无法完成复杂的权限控制；但是CVS通过CVS ROOT目录下的脚本，提供了相应功 能扩充的接口，不但可以完成精细的权限控制，还能完成更加个性化的功能。

代码统一管理，保存所有代码文件更改的历史记录。对代码进行集中统一管理，可以方便查看新增或删除的文件，能够跟踪所有代码改动痕迹。可以随意恢复到以前任意一个历史版本。并避免了因为版本不同引入的深层BUG。
完善的冲突解决方案，可以方便的解决文件冲突问题，而不需要借助其它的文件比较工具和手工的粘贴复制。 
代码权限的管理。可以为不同的用户设置不同的权限。可以设置访问用户的密码、只读、修改等权限，而且通过CVS ROOT目录下的脚本，提供了相应功能扩充的接口，不但可以完成精细的权限控制，还能完成更加个性化的功能。 
支持方便的版本发布和分支功能。
特点：版本库模型 C/S；变更范围:只是文件；网络协议：pserver,ssh；原子性：没有；
SVN：SVN全名Subversion，即版本控制系统。SVN是Subversion的简称，是一个开放源代码的版本控制系统，相较于CVS，它采用了分支管理系统。SVN同样是采用“客户端/服务器”(Client/Server)模型来工作的。SVN是一种集中式文件版本管理系统。
集中式代码管理的核心是服务器，所有开发者在开始工作之前必须从服务器获取代码，然后开发，最后解决冲突，提交。所有的版本信息都放在服务器上。如果脱离了服务器，开发者基本上是不可以工作。
特点：版本库模型 C/S；变更范围:目录树；网络协议：custom (svn), custom (svn) over ssh, HTTP and SSL ；原子性：有；

Git：Git是一个开源的分布式版本控制系统，用以有效、高速的处理从很小到非常大的项目版本管理。Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。

Git：GIT是采用分布式模型来工作的。可以保存任何文档，最善于保存文本文档，为解决软件源代码 （也是一种文本文档）版本管理问题而开发的，提供了许多有助于文本分析的工具。对于非文本文档，Git 只是简单地为其进行备份并实施版本管理。
Git在本地也是以Git版本库的形式管理，SVN仅仅是版本库的一个副本。
Git适合于大工程，大公司，很多人开发的一个项目。
Git首先建立一个自己的仓库，修改文件，add到暂存区，commit到仓库中，然后将commit后的文档push到服务器上。而SVN是只要commit更改就提交到服务器上了。
特点：版本库模型 分布式；变更范围:目录树；网络协议：custom, custom over ssh, rsync, HTTP/HTTPS, email, bundles；原子性：有；
网络协议：描述了多个版本库间进行同步时采用的网络协议。
原子提交性：描述了在提交更改时，能否保证所有更改要么全部提交或合并，要么不会发生任何改变。
